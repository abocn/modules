{
  "openapi": "3.1.0",
  "info": {
    "title": "modules Platform API",
    "version": "1.0.0",
    "description": "REST API for interacting the modules platform.",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/your-org/modules-repo"
    },
    "license": {
      "name": "Unlicense",
      "url": "https://unlicense.org/"
    }
  },
  "servers": [
    {
      "url": "{protocol}://{host}/api",
      "description": "Configurable server",
      "variables": {
        "protocol": {
          "enum": ["http", "https"],
          "default": "http"
        },
        "host": {
          "default": "localhost:3000",
          "description": "Server host and port"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Session-based authentication using JWT tokens from Better Auth"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key authentication for programmatic access. Supports 'read' and 'write' scopes."
      }
    }
  },
  "defaultResponseSet": "common",
  "responseSets": {
    "common": [
      "400",
      "500"
    ],
    "auth": [
      "400",
      "401",
      "403",
      "500"
    ],
    "public": [
      "400",
      "500"
    ]
  },
  "errorConfig": {
    "template": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "{{ERROR_MESSAGE}}"
        },
        "code": {
          "type": "string",
          "example": "{{ERROR_CODE}}"
        }
      }
    },
    "codes": {
      "400": {
        "description": "Bad Request",
        "variables": {
          "ERROR_MESSAGE": "Invalid request parameters",
          "ERROR_CODE": "BAD_REQUEST"
        }
      },
      "401": {
        "description": "Unauthorized",
        "variables": {
          "ERROR_MESSAGE": "Authentication required",
          "ERROR_CODE": "UNAUTHORIZED"
        }
      },
      "403": {
        "description": "Forbidden",
        "variables": {
          "ERROR_MESSAGE": "Access denied",
          "ERROR_CODE": "FORBIDDEN"
        }
      },
      "404": {
        "description": "Not Found",
        "variables": {
          "ERROR_MESSAGE": "Resource not found",
          "ERROR_CODE": "NOT_FOUND"
        }
      },
      "409": {
        "description": "Conflict",
        "variables": {
          "ERROR_MESSAGE": "Resource already exists",
          "ERROR_CODE": "CONFLICT"
        }
      },
      "500": {
        "description": "Internal Server Error",
        "variables": {
          "ERROR_MESSAGE": "An unexpected error occurred",
          "ERROR_CODE": "INTERNAL_ERROR"
        }
      }
    }
  },
  "apiDir": "./app/api",
  "schemaDir": "./lib/validations",
  "schemaType": "zod",
  "docsUrl": "/api-docs",
  "ui": "swagger",
  "outputFile": "openapi.json",
  "includeOpenApiRoutes": true,
  "debug": false
}
