{
  "openapi": "3.1.0",
  "info": {
    "title": "modules Platform API",
    "version": "1.0.0",
    "description": "REST API for interacting the modules platform.",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/your-org/modules-repo"
    },
    "license": {
      "name": "Unlicense",
      "url": "https://unlicense.org/"
    }
  },
  "servers": [
    {
      "url": "{protocol}://{host}/api",
      "description": "Configurable server",
      "variables": {
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "http"
        },
        "host": {
          "default": "localhost:3000",
          "description": "Server host and port"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Session-based authentication using JWT tokens from Better Auth"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key authentication for programmatic access. Supports 'read' and 'write' scopes."
      }
    },
    "schemas": {
      "id": {
        "type": "object"
      },
      "ApiKeyDetailsResponse": {},
      "ApiKeyRevokeResponse": {},
      "ModuleIdParam": {},
      "ModuleEditRequest": {},
      "ModuleEditResponse": {},
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "ModuleFlagsUpdateRequest": {},
      "ModuleUpdateResponse": {},
      "ModuleStatusUpdateRequest": {},
      "ModuleStatusResponse": {},
      "PendingModulesQueryParams": {},
      "PendingModulesResponse": {},
      "AdminModulesQueryParams": {},
      "AdminModulesListResponse": {},
      "ModuleSubmissionRequest": {},
      "ModuleCreateResponse": {},
      "RecentActionsQueryParams": {},
      "AdminActionsResponse": {},
      "AdminReviewsQueryParams": {},
      "AdminReviewsResponse": {},
      "AdminStatsResponse": {},
      "CategoriesQueryParams": {},
      "CategoriesResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                },
                "icon": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "name",
                "displayName",
                "description",
                "count"
              ]
            },
            "description": "Available module categories"
          }
        },
        "required": [
          "categories"
        ]
      },
      "HealthCheckResponse": {},
      "ModuleParams": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Module ID"
          }
        },
        "required": [
          "id"
        ]
      },
      "Redirect": {},
      "DownloadTrackingBody": {
        "type": "object",
        "properties": {
          "referrer": {
            "type": "string",
            "nullable": true,
            "description": "Download referrer"
          },
          "userAgent": {
            "type": "string",
            "nullable": true,
            "description": "User agent string"
          }
        }
      },
      "HelpfulVotesResponse": {
        "type": "object",
        "properties": {
          "ratingVotes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Rating IDs the user has marked helpful"
          },
          "replyVotes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reply IDs the user has marked helpful"
          }
        },
        "required": [
          "ratingVotes",
          "replyVotes"
        ]
      },
      "RatingsListResponse": {
        "type": "object",
        "properties": {
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RatingResponseSchema"
            },
            "description": "List of all ratings for the module"
          },
          "userRating": {
            "type": "object",
            "description": "Current user rating if exists"
          }
        },
        "required": [
          "ratings"
        ]
      },
      "CreateRatingBody": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "description": "Rating value between 1 and 5"
          },
          "comment": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true,
            "description": "Optional review comment (max 1000 characters)"
          },
          "turnstileToken": {
            "type": "string",
            "description": "Turnstile captcha token for verification"
          }
        },
        "required": [
          "rating",
          "turnstileToken"
        ]
      },
      "CreateRatingResponse": {
        "type": "object",
        "properties": {
          "rating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RatingResponseSchema"
              }
            ],
            "description": "Newly created rating"
          }
        },
        "required": [
          "rating"
        ]
      },
      "ModuleReleasesQueryParams": {
        "type": "object",
        "properties": {
          "latest": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "nullable": true,
            "description": "Return only latest release"
          },
          "includeAssets": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "default": "false",
            "description": "Include release assets"
          }
        },
        "required": [
          "includeAssets"
        ]
      },
      "ReleasesListResponse": {
        "type": "object",
        "properties": {
          "releases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReleaseResponseSchema"
            },
            "description": "List of module releases"
          }
        },
        "required": [
          "releases"
        ]
      },
      "ModuleQueryParams": {
        "type": "object",
        "properties": {
          "includeReleases": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "nullable": true,
            "description": "Include release information"
          }
        }
      },
      "ModuleDetailResponse": {
        "type": "object",
        "properties": {
          "module": {
            "description": "Module object with full details"
          }
        },
        "required": [
          "module"
        ]
      },
      "Detailed": {},
      "MySubmissionsResponse": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "approved",
                    "rejected"
                  ],
                  "description": "Module status"
                },
                "submittedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Submission date"
                },
                "reviewedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Review date"
                },
                "reviewNote": {
                  "type": "string",
                  "nullable": true,
                  "description": "Review feedback"
                }
              },
              "required": [
                "status",
                "submittedAt"
              ]
            },
            "description": "User submitted modules"
          }
        },
        "required": [
          "modules"
        ]
      },
      "ModulesQueryParams": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true,
            "description": "Filter by category"
          },
          "search": {
            "type": "string",
            "nullable": true,
            "description": "Search query for module names and descriptions"
          },
          "filter": {
            "type": "string",
            "enum": [
              "featured",
              "recommended",
              "recent"
            ],
            "nullable": true,
            "description": "Pre-defined filter type"
          }
        }
      },
      "ModulesListResponse": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "array",
            "items": {},
            "description": "Array of module objects"
          }
        },
        "required": [
          "modules"
        ]
      },
      "SubmitModuleRequest": {},
      "SubmitModuleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique module ID"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "pending": {
            "type": "boolean",
            "description": "Indicates module is pending review"
          }
        },
        "required": [
          "id",
          "message",
          "pending"
        ]
      },
      "UpdateModuleBody": {
        "type": "object",
        "properties": {
          "module": {
            "type": "object",
            "description": "Updated module fields"
          },
          "release": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "downloadUrl": {
                "type": "string",
                "format": "uri"
              },
              "changelog": {
                "type": "string",
                "nullable": true
              },
              "size": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "version",
              "downloadUrl"
            ],
            "nullable": true,
            "description": "New release information"
          }
        },
        "required": [
          "module"
        ]
      },
      "UpdateModuleResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Update success status"
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModuleResponseSchema"
              }
            ],
            "description": "Updated module"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "module",
          "message"
        ]
      },
      "RatingParams": {},
      "HelpfulVoteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Vote operation success"
          },
          "helpful": {
            "type": "number",
            "description": "Updated helpful vote count"
          },
          "userVoted": {
            "type": "boolean",
            "description": "Whether current user has voted"
          }
        },
        "required": [
          "success",
          "helpful",
          "userVoted"
        ]
      },
      "RepliesListResponse": {
        "type": "object",
        "properties": {
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplyResponseSchema"
            },
            "description": "List of replies for the rating"
          }
        },
        "required": [
          "replies"
        ]
      },
      "CreateReplyBody": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Reply content"
          },
          "turnstileToken": {
            "type": "string",
            "description": "Turnstile captcha token for verification"
          }
        },
        "required": [
          "content",
          "turnstileToken"
        ]
      },
      "CreateReplyResponse": {
        "type": "object",
        "properties": {
          "reply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReplyResponseSchema"
              }
            ],
            "description": "Newly created reply"
          }
        },
        "required": [
          "reply"
        ]
      },
      "ReplyParams": {},
      "SearchQueryParams": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Search query"
          },
          "category": {
            "type": "string",
            "nullable": true,
            "description": "Filter by category"
          },
          "sort": {
            "type": "string",
            "enum": [
              "relevance",
              "downloads",
              "rating",
              "updated",
              "name"
            ],
            "default": "relevance",
            "description": "Sort order"
          },
          "order": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "description": "Sort direction"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number for pagination"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Items per page"
          },
          "minRating": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "nullable": true,
            "description": "Minimum rating filter"
          },
          "isOpenSource": {
            "type": "boolean",
            "nullable": true,
            "description": "Filter by open source status"
          },
          "rootMethod": {
            "type": "string",
            "nullable": true,
            "description": "Filter by root method"
          },
          "androidVersion": {
            "type": "string",
            "nullable": true,
            "description": "Filter by Android version compatibility"
          }
        },
        "required": [
          "q",
          "sort",
          "order",
          "page",
          "limit"
        ]
      },
      "SearchResponse": {},
      "SearchSuggestionsRequest": {},
      "SearchSuggestionsResponse": {
        "type": "object",
        "properties": {
          "suggestions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "module",
                    "author",
                    "category"
                  ]
                },
                "value": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "count": {
                  "type": "number",
                  "nullable": true
                }
              },
              "required": [
                "type",
                "value",
                "label"
              ]
            },
            "description": "Search suggestions"
          }
        },
        "required": [
          "suggestions"
        ]
      },
      "FormData": {},
      "UploadAvatarResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Upload success status"
          },
          "url": {
            "type": "string",
            "description": "Avatar URL"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "url",
          "message"
        ]
      },
      "DeleteAvatarResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Delete success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "GitHubPATStatusResponse": {
        "type": "object",
        "properties": {
          "hasToken": {
            "type": "boolean",
            "description": "Whether user has configured a PAT"
          },
          "username": {
            "type": "string",
            "nullable": true,
            "description": "Associated GitHub username"
          }
        },
        "required": [
          "hasToken"
        ]
      },
      "GitHubPATBody": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "minLength": 1,
            "description": "GitHub Personal Access Token"
          }
        },
        "required": [
          "token"
        ]
      },
      "SaveGitHubPATResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "DeleteGitHubPATResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "ValidateGitHubPATBody": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "minLength": 1,
            "description": "GitHub Personal Access Token to validate"
          }
        },
        "required": [
          "token"
        ]
      },
      "ValidateGitHubPATResponse": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "Token validity status"
          },
          "username": {
            "type": "string",
            "nullable": true,
            "description": "GitHub username"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Token scopes"
          },
          "error": {
            "type": "string",
            "nullable": true,
            "description": "Validation error message"
          }
        },
        "required": [
          "valid"
        ]
      },
      "UpdateProfileBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateProfileResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "image": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "name"
            ],
            "description": "Updated user information"
          }
        },
        "required": [
          "success",
          "user"
        ]
      },
      "StatsResponse": {
        "type": "object",
        "properties": {
          "totalModules": {
            "type": "number",
            "description": "Total number of modules"
          },
          "totalDownloads": {
            "type": "number",
            "description": "Total download count"
          },
          "totalUsers": {
            "type": "number",
            "description": "Total user count"
          },
          "pendingModules": {
            "type": "number",
            "description": "Modules pending review"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "count"
              ]
            },
            "description": "Module count by category"
          }
        },
        "required": [
          "totalModules",
          "totalDownloads",
          "totalUsers",
          "pendingModules",
          "categories"
        ]
      },
      "TrendingQueryParams": {},
      "TrendingResponse": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleResponseSchema"
            },
            "description": "Trending modules"
          }
        },
        "required": [
          "modules"
        ]
      },
      "ApiKeyParams": {},
      "RevokeApiKeyResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "ApiKeysListResponse": {
        "type": "object",
        "properties": {
          "apiKeys": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "scopes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "lastUsed": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "name",
                "scopes",
                "createdAt"
              ]
            },
            "description": "List of user API keys (without key values)"
          }
        },
        "required": [
          "apiKeys"
        ]
      },
      "CreateApiKeyBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "expiresIn": {
            "type": "string",
            "enum": [
              "30days",
              "90days",
              "1year",
              "never"
            ],
            "nullable": true
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "admin"
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateApiKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "API key ID"
          },
          "name": {
            "type": "string",
            "description": "API key name"
          },
          "key": {
            "type": "string",
            "description": "API key value (only shown once)"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Granted scopes"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Expiration date"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          }
        },
        "required": [
          "id",
          "name",
          "key",
          "scopes",
          "createdAt"
        ]
      },
      "UserProfileQueryParams": {},
      "UserProfileParams": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID"
          }
        },
        "required": [
          "id"
        ]
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "image": {
                "type": "string",
                "nullable": true
              },
              "joinedAt": {
                "type": "string",
                "format": "date-time"
              },
              "modulesCount": {
                "type": "number"
              },
              "totalDownloads": {
                "type": "number"
              },
              "averageRating": {
                "type": "number",
                "nullable": true
              }
            },
            "required": [
              "id",
              "joinedAt",
              "modulesCount",
              "totalDownloads"
            ],
            "description": "Public user profile"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleResponseSchema"
            },
            "description": "User published modules"
          },
          "recentActivity": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "module_published",
                    "module_updated",
                    "rating_posted"
                  ]
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                },
                "moduleId": {
                  "type": "string",
                  "nullable": true
                },
                "moduleName": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "type",
                "timestamp"
              ]
            },
            "description": "Recent user activity"
          }
        },
        "required": [
          "user",
          "modules",
          "recentActivity"
        ]
      },
      "UserRoleResponse": {
        "type": "object",
        "properties": {
          "isAdmin": {
            "type": "boolean",
            "description": "Admin role status"
          },
          "userId": {
            "type": "string",
            "description": "User ID"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "User email"
          }
        },
        "required": [
          "isAdmin",
          "userId"
        ]
      },
      "testEmailSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "ModulesQueryParamsSchema": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true,
            "description": "Filter by category"
          },
          "search": {
            "type": "string",
            "nullable": true,
            "description": "Search query for module names and descriptions"
          },
          "filter": {
            "type": "string",
            "enum": [
              "featured",
              "recommended",
              "recent"
            ],
            "nullable": true,
            "description": "Pre-defined filter type"
          }
        }
      },
      "ModulesListResponseSchema": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "array",
            "items": {},
            "description": "Array of module objects"
          }
        },
        "required": [
          "modules"
        ]
      },
      "ModuleParamsSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Module ID"
          }
        },
        "required": [
          "id"
        ]
      },
      "ModuleQueryParamsSchema": {
        "type": "object",
        "properties": {
          "includeReleases": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "nullable": true,
            "description": "Include release information"
          }
        }
      },
      "ModuleDetailResponseSchema": {
        "type": "object",
        "properties": {
          "module": {
            "description": "Module object with full details"
          }
        },
        "required": [
          "module"
        ]
      },
      "updateProfileSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        },
        "required": [
          "name"
        ]
      },
      "createApiKeySchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "expiresIn": {
            "type": "string",
            "enum": [
              "30days",
              "90days",
              "1year",
              "never"
            ],
            "nullable": true
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "admin"
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "ErrorResponseSchema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "Error code"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "field",
                "message"
              ]
            },
            "nullable": true,
            "description": "Field-specific validation errors"
          },
          "captchaError": {
            "type": "boolean",
            "nullable": true,
            "description": "Indicates captcha verification failure"
          },
          "resetTime": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp for rate limit reset"
          },
          "existingId": {
            "type": "string",
            "nullable": true,
            "description": "ID of existing duplicate resource"
          }
        },
        "required": [
          "error"
        ]
      },
      "SubmitModuleResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique module ID"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "pending": {
            "type": "boolean",
            "description": "Indicates module is pending review"
          }
        },
        "required": [
          "id",
          "message",
          "pending"
        ]
      },
      "ModuleResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique module ID"
          },
          "name": {
            "type": "string",
            "description": "Module name"
          },
          "shortDescription": {
            "type": "string",
            "description": "Brief module description"
          },
          "description": {
            "type": "string",
            "description": "Full module description"
          },
          "author": {
            "type": "string",
            "description": "Module author"
          },
          "category": {
            "type": "string",
            "description": "Module category"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "description": "Module icon URL"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Screenshot URLs"
          },
          "isOpenSource": {
            "type": "boolean",
            "description": "Open source status"
          },
          "license": {
            "type": "string",
            "description": "License type"
          },
          "compatibility": {
            "type": "object",
            "properties": {
              "androidVersions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "rootMethods": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "androidVersions",
              "rootMethods"
            ],
            "description": "Compatibility information"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Feature list"
          },
          "sourceUrl": {
            "type": "string",
            "nullable": true,
            "description": "Source code repository URL"
          },
          "communityUrl": {
            "type": "string",
            "nullable": true,
            "description": "Community/support URL"
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Featured status"
          },
          "isRecommended": {
            "type": "boolean",
            "description": "Recommended status"
          },
          "downloads": {
            "type": "number",
            "nullable": true,
            "description": "Total download count"
          },
          "rating": {
            "type": "number",
            "nullable": true,
            "description": "Average rating (1-5)"
          },
          "ratingCount": {
            "type": "number",
            "nullable": true,
            "description": "Number of ratings"
          }
        },
        "required": [
          "id",
          "name",
          "shortDescription",
          "description",
          "author",
          "category",
          "lastUpdated",
          "isOpenSource",
          "license",
          "compatibility",
          "features",
          "isFeatured",
          "isRecommended"
        ]
      },
      "PaginatedResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleResponseSchema"
            },
            "description": "Module list"
          },
          "total": {
            "type": "number",
            "description": "Total number of modules"
          },
          "page": {
            "type": "number",
            "description": "Current page number"
          },
          "pageSize": {
            "type": "number",
            "description": "Items per page"
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages"
          }
        },
        "required": [
          "data",
          "total",
          "page",
          "pageSize",
          "totalPages"
        ]
      },
      "RatingResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Rating ID"
          },
          "moduleId": {
            "type": "string",
            "description": "Module ID"
          },
          "userId": {
            "type": "string",
            "description": "User ID"
          },
          "rating": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "description": "Rating value (1-5)"
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "Review comment"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "helpful": {
            "type": "number",
            "description": "Helpful vote count"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "image": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true,
            "description": "User information"
          }
        },
        "required": [
          "id",
          "moduleId",
          "userId",
          "rating",
          "createdAt",
          "updatedAt",
          "helpful"
        ]
      },
      "AdminActionResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          },
          "moduleId": {
            "type": "string",
            "nullable": true,
            "description": "Affected module ID"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "StatsResponseSchema": {
        "type": "object",
        "properties": {
          "totalModules": {
            "type": "number",
            "description": "Total number of modules"
          },
          "totalDownloads": {
            "type": "number",
            "description": "Total download count"
          },
          "totalUsers": {
            "type": "number",
            "description": "Total user count"
          },
          "pendingModules": {
            "type": "number",
            "description": "Modules pending review"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "count"
              ]
            },
            "description": "Module count by category"
          }
        },
        "required": [
          "totalModules",
          "totalDownloads",
          "totalUsers",
          "pendingModules",
          "categories"
        ]
      },
      "UserRoleResponseSchema": {
        "type": "object",
        "properties": {
          "isAdmin": {
            "type": "boolean",
            "description": "Admin role status"
          },
          "userId": {
            "type": "string",
            "description": "User ID"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "User email"
          }
        },
        "required": [
          "isAdmin",
          "userId"
        ]
      },
      "CreateRatingBodySchema": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "description": "Rating value between 1 and 5"
          },
          "comment": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true,
            "description": "Optional review comment (max 1000 characters)"
          },
          "turnstileToken": {
            "type": "string",
            "description": "Turnstile captcha token for verification"
          }
        },
        "required": [
          "rating",
          "turnstileToken"
        ]
      },
      "RatingsListResponseSchema": {
        "type": "object",
        "properties": {
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RatingResponseSchema"
            },
            "description": "List of all ratings for the module"
          },
          "userRating": {
            "type": "object",
            "description": "Current user rating if exists"
          }
        },
        "required": [
          "ratings"
        ]
      },
      "CreateRatingResponseSchema": {
        "type": "object",
        "properties": {
          "rating": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RatingResponseSchema"
              }
            ],
            "description": "Newly created rating"
          }
        },
        "required": [
          "rating"
        ]
      },
      "SearchQueryParamsSchema": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Search query"
          },
          "category": {
            "type": "string",
            "nullable": true,
            "description": "Filter by category"
          },
          "sort": {
            "type": "string",
            "enum": [
              "relevance",
              "downloads",
              "rating",
              "updated",
              "name"
            ],
            "default": "relevance",
            "description": "Sort order"
          },
          "order": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "description": "Sort direction"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number for pagination"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Items per page"
          },
          "minRating": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "nullable": true,
            "description": "Minimum rating filter"
          },
          "isOpenSource": {
            "type": "boolean",
            "nullable": true,
            "description": "Filter by open source status"
          },
          "rootMethod": {
            "type": "string",
            "nullable": true,
            "description": "Filter by root method"
          },
          "androidVersion": {
            "type": "string",
            "nullable": true,
            "description": "Filter by Android version compatibility"
          }
        },
        "required": [
          "q",
          "sort",
          "order",
          "page",
          "limit"
        ]
      },
      "SearchSuggestionsBodySchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "Partial query for suggestions"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "default": 10,
            "description": "Maximum suggestions to return"
          }
        },
        "required": [
          "query",
          "limit"
        ]
      },
      "SearchSuggestionsResponseSchema": {
        "type": "object",
        "properties": {
          "suggestions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "module",
                    "author",
                    "category"
                  ]
                },
                "value": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "count": {
                  "type": "number",
                  "nullable": true
                }
              },
              "required": [
                "type",
                "value",
                "label"
              ]
            },
            "description": "Search suggestions"
          }
        },
        "required": [
          "suggestions"
        ]
      },
      "ImageDownloadBodySchema": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Image URL to download"
          },
          "type": {
            "type": "string",
            "enum": [
              "icon",
              "screenshot"
            ],
            "description": "Image type"
          },
          "maxSize": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10485760,
            "default": 5242880,
            "description": "Maximum file size in bytes (default 5MB)"
          }
        },
        "required": [
          "url",
          "type",
          "maxSize"
        ]
      },
      "ImageDownloadResponseSchema": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Local URL of downloaded image"
          },
          "originalUrl": {
            "type": "string",
            "description": "Original image URL"
          },
          "size": {
            "type": "number",
            "description": "File size in bytes"
          },
          "contentType": {
            "type": "string",
            "description": "MIME type"
          },
          "width": {
            "type": "number",
            "nullable": true,
            "description": "Image width in pixels"
          },
          "height": {
            "type": "number",
            "nullable": true,
            "description": "Image height in pixels"
          }
        },
        "required": [
          "url",
          "originalUrl",
          "size",
          "contentType"
        ]
      },
      "UpdateProfileResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "image": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "id",
              "name"
            ],
            "description": "Updated user information"
          }
        },
        "required": [
          "success",
          "user"
        ]
      },
      "CreateApiKeyResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "API key ID"
          },
          "name": {
            "type": "string",
            "description": "API key name"
          },
          "key": {
            "type": "string",
            "description": "API key value (only shown once)"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Granted scopes"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Expiration date"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          }
        },
        "required": [
          "id",
          "name",
          "key",
          "scopes",
          "createdAt"
        ]
      },
      "ApiKeysListResponseSchema": {
        "type": "object",
        "properties": {
          "apiKeys": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "scopes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "lastUsed": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "name",
                "scopes",
                "createdAt"
              ]
            },
            "description": "List of user API keys (without key values)"
          }
        },
        "required": [
          "apiKeys"
        ]
      },
      "RevokeApiKeyResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "GitHubPATBodySchema": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "minLength": 1,
            "description": "GitHub Personal Access Token"
          }
        },
        "required": [
          "token"
        ]
      },
      "ValidateGitHubPATBodySchema": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "minLength": 1,
            "description": "GitHub Personal Access Token to validate"
          }
        },
        "required": [
          "token"
        ]
      },
      "ValidateGitHubPATResponseSchema": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "Token validity status"
          },
          "username": {
            "type": "string",
            "nullable": true,
            "description": "GitHub username"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Token scopes"
          },
          "error": {
            "type": "string",
            "nullable": true,
            "description": "Validation error message"
          }
        },
        "required": [
          "valid"
        ]
      },
      "GitHubPATStatusResponseSchema": {
        "type": "object",
        "properties": {
          "hasToken": {
            "type": "boolean",
            "description": "Whether user has configured a PAT"
          },
          "username": {
            "type": "string",
            "nullable": true,
            "description": "Associated GitHub username"
          }
        },
        "required": [
          "hasToken"
        ]
      },
      "SaveGitHubPATResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "DeleteGitHubPATResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "UploadAvatarResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Upload success status"
          },
          "url": {
            "type": "string",
            "description": "Avatar URL"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "url",
          "message"
        ]
      },
      "DeleteAvatarResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Delete success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "HelpfulVoteResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Vote operation success"
          },
          "helpful": {
            "type": "number",
            "description": "Updated helpful vote count"
          },
          "userVoted": {
            "type": "boolean",
            "description": "Whether current user has voted"
          }
        },
        "required": [
          "success",
          "helpful",
          "userVoted"
        ]
      },
      "HelpfulVotesResponseSchema": {
        "type": "object",
        "properties": {
          "ratingVotes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Rating IDs the user has marked helpful"
          },
          "replyVotes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reply IDs the user has marked helpful"
          }
        },
        "required": [
          "ratingVotes",
          "replyVotes"
        ]
      },
      "CreateReplyBodySchema": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Reply content"
          },
          "turnstileToken": {
            "type": "string",
            "description": "Turnstile captcha token for verification"
          }
        },
        "required": [
          "content",
          "turnstileToken"
        ]
      },
      "ReplyResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Reply ID"
          },
          "ratingId": {
            "type": "string",
            "description": "Parent rating ID"
          },
          "userId": {
            "type": "string",
            "description": "Author user ID"
          },
          "content": {
            "type": "string",
            "description": "Reply content"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "helpful": {
            "type": "number",
            "description": "Helpful vote count"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "image": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true,
            "description": "Author information"
          }
        },
        "required": [
          "id",
          "ratingId",
          "userId",
          "content",
          "createdAt",
          "updatedAt",
          "helpful"
        ]
      },
      "CreateReplyResponseSchema": {
        "type": "object",
        "properties": {
          "reply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReplyResponseSchema"
              }
            ],
            "description": "Newly created reply"
          }
        },
        "required": [
          "reply"
        ]
      },
      "RepliesListResponseSchema": {
        "type": "object",
        "properties": {
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplyResponseSchema"
            },
            "description": "List of replies for the rating"
          }
        },
        "required": [
          "replies"
        ]
      },
      "ModuleReleasesQueryParamsSchema": {
        "type": "object",
        "properties": {
          "latest": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "nullable": true,
            "description": "Return only latest release"
          },
          "includeAssets": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "default": "false",
            "description": "Include release assets"
          }
        },
        "required": [
          "includeAssets"
        ]
      },
      "ReleaseResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Release ID"
          },
          "moduleId": {
            "type": "string",
            "description": "Module ID"
          },
          "version": {
            "type": "string",
            "description": "Release version"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Download URL"
          },
          "changelog": {
            "type": "string",
            "nullable": true,
            "description": "Release notes"
          },
          "size": {
            "type": "string",
            "nullable": true,
            "description": "File size"
          },
          "downloads": {
            "type": "number",
            "description": "Download count"
          },
          "isLatest": {
            "type": "boolean",
            "description": "Latest release flag"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Release date"
          },
          "assets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "downloadUrl": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "contentType": {
                  "type": "string",
                  "nullable": true
                },
                "downloads": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "name",
                "downloadUrl",
                "size",
                "downloads"
              ]
            },
            "nullable": true,
            "description": "Release assets"
          }
        },
        "required": [
          "id",
          "moduleId",
          "version",
          "downloadUrl",
          "downloads",
          "isLatest",
          "createdAt"
        ]
      },
      "ReleasesListResponseSchema": {
        "type": "object",
        "properties": {
          "releases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReleaseResponseSchema"
            },
            "description": "List of module releases"
          }
        },
        "required": [
          "releases"
        ]
      },
      "TrendingResponseSchema": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleResponseSchema"
            },
            "description": "Trending modules"
          }
        },
        "required": [
          "modules"
        ]
      },
      "CategoriesResponseSchema": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                },
                "icon": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "name",
                "displayName",
                "description",
                "count"
              ]
            },
            "description": "Available module categories"
          }
        },
        "required": [
          "categories"
        ]
      },
      "MySubmissionsResponseSchema": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "approved",
                    "rejected"
                  ],
                  "description": "Module status"
                },
                "submittedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Submission date"
                },
                "reviewedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Review date"
                },
                "reviewNote": {
                  "type": "string",
                  "nullable": true,
                  "description": "Review feedback"
                }
              },
              "required": [
                "status",
                "submittedAt"
              ]
            },
            "description": "User submitted modules"
          }
        },
        "required": [
          "modules"
        ]
      },
      "ModuleStatsResponseSchema": {
        "type": "object",
        "properties": {
          "downloads": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "daily": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "date",
                    "count"
                  ]
                }
              },
              "weekly": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "week": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "week",
                    "count"
                  ]
                }
              },
              "monthly": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "month",
                    "count"
                  ]
                }
              }
            },
            "required": [
              "total",
              "daily",
              "weekly",
              "monthly"
            ],
            "description": "Download statistics"
          },
          "ratings": {
            "type": "object",
            "properties": {
              "average": {
                "type": "number"
              },
              "distribution": {
                "type": "object",
                "properties": {
                  "1": {
                    "type": "number"
                  },
                  "2": {
                    "type": "number"
                  },
                  "3": {
                    "type": "number"
                  },
                  "4": {
                    "type": "number"
                  },
                  "5": {
                    "type": "number"
                  }
                },
                "required": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ]
              },
              "recent": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "required": [
              "average",
              "distribution",
              "recent"
            ],
            "description": "Rating statistics"
          },
          "releases": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "latest": {
                "type": "object",
                "nullable": true
              }
            },
            "required": [
              "total"
            ],
            "description": "Release statistics"
          }
        },
        "required": [
          "downloads",
          "ratings",
          "releases"
        ]
      },
      "DownloadTrackingBodySchema": {
        "type": "object",
        "properties": {
          "referrer": {
            "type": "string",
            "nullable": true,
            "description": "Download referrer"
          },
          "userAgent": {
            "type": "string",
            "nullable": true,
            "description": "User agent string"
          }
        }
      },
      "SuccessResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "UpdateModuleBodySchema": {
        "type": "object",
        "properties": {
          "module": {
            "type": "object",
            "description": "Updated module fields"
          },
          "release": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "downloadUrl": {
                "type": "string",
                "format": "uri"
              },
              "changelog": {
                "type": "string",
                "nullable": true
              },
              "size": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "version",
              "downloadUrl"
            ],
            "nullable": true,
            "description": "New release information"
          }
        },
        "required": [
          "module"
        ]
      },
      "UpdateModuleResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Update success status"
          },
          "module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModuleResponseSchema"
              }
            ],
            "description": "Updated module"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          }
        },
        "required": [
          "success",
          "module",
          "message"
        ]
      },
      "UserProfileParamsSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID"
          }
        },
        "required": [
          "id"
        ]
      },
      "UserProfileResponseSchema": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "image": {
                "type": "string",
                "nullable": true
              },
              "joinedAt": {
                "type": "string",
                "format": "date-time"
              },
              "modulesCount": {
                "type": "number"
              },
              "totalDownloads": {
                "type": "number"
              },
              "averageRating": {
                "type": "number",
                "nullable": true
              }
            },
            "required": [
              "id",
              "joinedAt",
              "modulesCount",
              "totalDownloads"
            ],
            "description": "Public user profile"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleResponseSchema"
            },
            "description": "User published modules"
          },
          "recentActivity": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "module_published",
                    "module_updated",
                    "rating_posted"
                  ]
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                },
                "moduleId": {
                  "type": "string",
                  "nullable": true
                },
                "moduleName": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "type",
                "timestamp"
              ]
            },
            "description": "Recent user activity"
          }
        },
        "required": [
          "user",
          "modules",
          "recentActivity"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "Error code"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "field",
                "message"
              ]
            },
            "nullable": true,
            "description": "Field-specific validation errors"
          },
          "captchaError": {
            "type": "boolean",
            "nullable": true,
            "description": "Indicates captcha verification failure"
          },
          "resetTime": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp for rate limit reset"
          },
          "existingId": {
            "type": "string",
            "nullable": true,
            "description": "ID of existing duplicate resource"
          }
        },
        "required": [
          "error"
        ]
      },
      "ModuleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique module ID"
          },
          "name": {
            "type": "string",
            "description": "Module name"
          },
          "shortDescription": {
            "type": "string",
            "description": "Brief module description"
          },
          "description": {
            "type": "string",
            "description": "Full module description"
          },
          "author": {
            "type": "string",
            "description": "Module author"
          },
          "category": {
            "type": "string",
            "description": "Module category"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "description": "Module icon URL"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Screenshot URLs"
          },
          "isOpenSource": {
            "type": "boolean",
            "description": "Open source status"
          },
          "license": {
            "type": "string",
            "description": "License type"
          },
          "compatibility": {
            "type": "object",
            "properties": {
              "androidVersions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "rootMethods": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "androidVersions",
              "rootMethods"
            ],
            "description": "Compatibility information"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Feature list"
          },
          "sourceUrl": {
            "type": "string",
            "nullable": true,
            "description": "Source code repository URL"
          },
          "communityUrl": {
            "type": "string",
            "nullable": true,
            "description": "Community/support URL"
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Featured status"
          },
          "isRecommended": {
            "type": "boolean",
            "description": "Recommended status"
          },
          "downloads": {
            "type": "number",
            "nullable": true,
            "description": "Total download count"
          },
          "rating": {
            "type": "number",
            "nullable": true,
            "description": "Average rating (1-5)"
          },
          "ratingCount": {
            "type": "number",
            "nullable": true,
            "description": "Number of ratings"
          }
        },
        "required": [
          "id",
          "name",
          "shortDescription",
          "description",
          "author",
          "category",
          "lastUpdated",
          "isOpenSource",
          "license",
          "compatibility",
          "features",
          "isFeatured",
          "isRecommended"
        ]
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleResponseSchema"
            },
            "description": "Module list"
          },
          "total": {
            "type": "number",
            "description": "Total number of modules"
          },
          "page": {
            "type": "number",
            "description": "Current page number"
          },
          "pageSize": {
            "type": "number",
            "description": "Items per page"
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages"
          }
        },
        "required": [
          "data",
          "total",
          "page",
          "pageSize",
          "totalPages"
        ]
      },
      "RatingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Rating ID"
          },
          "moduleId": {
            "type": "string",
            "description": "Module ID"
          },
          "userId": {
            "type": "string",
            "description": "User ID"
          },
          "rating": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "description": "Rating value (1-5)"
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "Review comment"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "helpful": {
            "type": "number",
            "description": "Helpful vote count"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "image": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true,
            "description": "User information"
          }
        },
        "required": [
          "id",
          "moduleId",
          "userId",
          "rating",
          "createdAt",
          "updatedAt",
          "helpful"
        ]
      },
      "AdminActionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Result message"
          },
          "moduleId": {
            "type": "string",
            "nullable": true,
            "description": "Affected module ID"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "SearchSuggestionsBody": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "Partial query for suggestions"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "default": 10,
            "description": "Maximum suggestions to return"
          }
        },
        "required": [
          "query",
          "limit"
        ]
      },
      "ImageDownloadBody": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Image URL to download"
          },
          "type": {
            "type": "string",
            "enum": [
              "icon",
              "screenshot"
            ],
            "description": "Image type"
          },
          "maxSize": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10485760,
            "default": 5242880,
            "description": "Maximum file size in bytes (default 5MB)"
          }
        },
        "required": [
          "url",
          "type",
          "maxSize"
        ]
      },
      "ImageDownloadResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Local URL of downloaded image"
          },
          "originalUrl": {
            "type": "string",
            "description": "Original image URL"
          },
          "size": {
            "type": "number",
            "description": "File size in bytes"
          },
          "contentType": {
            "type": "string",
            "description": "MIME type"
          },
          "width": {
            "type": "number",
            "nullable": true,
            "description": "Image width in pixels"
          },
          "height": {
            "type": "number",
            "nullable": true,
            "description": "Image height in pixels"
          }
        },
        "required": [
          "url",
          "originalUrl",
          "size",
          "contentType"
        ]
      },
      "ReplyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Reply ID"
          },
          "ratingId": {
            "type": "string",
            "description": "Parent rating ID"
          },
          "userId": {
            "type": "string",
            "description": "Author user ID"
          },
          "content": {
            "type": "string",
            "description": "Reply content"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "helpful": {
            "type": "number",
            "description": "Helpful vote count"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "image": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true,
            "description": "Author information"
          }
        },
        "required": [
          "id",
          "ratingId",
          "userId",
          "content",
          "createdAt",
          "updatedAt",
          "helpful"
        ]
      },
      "ReleaseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Release ID"
          },
          "moduleId": {
            "type": "string",
            "description": "Module ID"
          },
          "version": {
            "type": "string",
            "description": "Release version"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Download URL"
          },
          "changelog": {
            "type": "string",
            "nullable": true,
            "description": "Release notes"
          },
          "size": {
            "type": "string",
            "nullable": true,
            "description": "File size"
          },
          "downloads": {
            "type": "number",
            "description": "Download count"
          },
          "isLatest": {
            "type": "boolean",
            "description": "Latest release flag"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Release date"
          },
          "assets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "downloadUrl": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "contentType": {
                  "type": "string",
                  "nullable": true
                },
                "downloads": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "name",
                "downloadUrl",
                "size",
                "downloads"
              ]
            },
            "nullable": true,
            "description": "Release assets"
          }
        },
        "required": [
          "id",
          "moduleId",
          "version",
          "downloadUrl",
          "downloads",
          "isLatest",
          "createdAt"
        ]
      },
      "ModuleStatsResponse": {
        "type": "object",
        "properties": {
          "downloads": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "daily": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "date",
                    "count"
                  ]
                }
              },
              "weekly": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "week": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "week",
                    "count"
                  ]
                }
              },
              "monthly": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "month": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "month",
                    "count"
                  ]
                }
              }
            },
            "required": [
              "total",
              "daily",
              "weekly",
              "monthly"
            ],
            "description": "Download statistics"
          },
          "ratings": {
            "type": "object",
            "properties": {
              "average": {
                "type": "number"
              },
              "distribution": {
                "type": "object",
                "properties": {
                  "1": {
                    "type": "number"
                  },
                  "2": {
                    "type": "number"
                  },
                  "3": {
                    "type": "number"
                  },
                  "4": {
                    "type": "number"
                  },
                  "5": {
                    "type": "number"
                  }
                },
                "required": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ]
              },
              "recent": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            },
            "required": [
              "average",
              "distribution",
              "recent"
            ],
            "description": "Rating statistics"
          },
          "releases": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "latest": {
                "type": "object",
                "nullable": true
              }
            },
            "required": [
              "total"
            ],
            "description": "Release statistics"
          }
        },
        "required": [
          "downloads",
          "ratings",
          "releases"
        ]
      },
      "moduleSubmissionSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9\\s\\-._()[\\]]+$"
          },
          "shortDescription": {
            "type": "string",
            "minLength": 10
          },
          "description": {
            "type": "string",
            "minLength": 30
          },
          "author": {
            "type": "string",
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9\\s\\-._@]+$"
          },
          "category": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "customLicense": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "isOpenSource": {
            "type": "boolean"
          },
          "sourceUrl": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "communityUrl": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "githubRepo": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 2
            },
            "minItems": 1
          },
          "compatibility": {
            "type": "object",
            "properties": {
              "androidVersions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "maxItems": 20
              },
              "rootMethods": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "maxItems": 5
              }
            },
            "required": [
              "androidVersions",
              "rootMethods"
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "required": [
          "name",
          "shortDescription",
          "description",
          "author",
          "category",
          "license",
          "isOpenSource",
          "features",
          "compatibility"
        ]
      },
      "releaseSchema": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "downloadUrl": {
            "type": "string"
          },
          "changelog": {
            "type": "string",
            "maxLength": 5000,
            "nullable": true
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "githubReleaseId": {
            "type": "string",
            "nullable": true
          },
          "githubTagName": {
            "type": "string",
            "nullable": true
          },
          "isLatest": {
            "type": "boolean",
            "default": true
          },
          "assets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "downloadUrl": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "contentType": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "name",
                "downloadUrl",
                "size"
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "version",
          "downloadUrl",
          "isLatest"
        ]
      },
      "moduleSubmissionWithReleaseSchema": {
        "type": "object",
        "properties": {
          "module": {
            "type": "object"
          },
          "release": {
            "type": "object"
          }
        },
        "required": [
          "module",
          "module"
        ]
      },
      "ModuleSubmission": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9\\s\\-._()[\\]]+$"
          },
          "shortDescription": {
            "type": "string",
            "minLength": 10
          },
          "description": {
            "type": "string",
            "minLength": 30
          },
          "author": {
            "type": "string",
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9\\s\\-._@]+$"
          },
          "category": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "customLicense": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "isOpenSource": {
            "type": "boolean"
          },
          "sourceUrl": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "communityUrl": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "githubRepo": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 2
            },
            "minItems": 1
          },
          "compatibility": {
            "type": "object",
            "properties": {
              "androidVersions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "maxItems": 20
              },
              "rootMethods": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "maxItems": 5
              }
            },
            "required": [
              "androidVersions",
              "rootMethods"
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "required": [
          "name",
          "shortDescription",
          "description",
          "author",
          "category",
          "license",
          "isOpenSource",
          "features",
          "compatibility"
        ]
      },
      "Release": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "downloadUrl": {
            "type": "string"
          },
          "changelog": {
            "type": "string",
            "maxLength": 5000,
            "nullable": true
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "githubReleaseId": {
            "type": "string",
            "nullable": true
          },
          "githubTagName": {
            "type": "string",
            "nullable": true
          },
          "isLatest": {
            "type": "boolean",
            "default": true
          },
          "assets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "downloadUrl": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "contentType": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "name",
                "downloadUrl",
                "size"
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "version",
          "downloadUrl",
          "isLatest"
        ]
      },
      "ModuleSubmissionWithRelease": {
        "type": "object",
        "properties": {
          "module": {
            "type": "object"
          },
          "release": {
            "type": "object"
          }
        },
        "required": [
          "module",
          "module"
        ]
      },
      "clientModuleSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9\\s\\-._()[\\]]+$"
          },
          "shortDescription": {
            "type": "string",
            "minLength": 10
          },
          "description": {
            "type": "string",
            "minLength": 30
          },
          "author": {
            "type": "string",
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9\\s\\-._@]+$"
          },
          "category": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "customLicense": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "isOpenSource": {
            "type": "boolean"
          },
          "sourceUrl": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "communityUrl": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "githubRepo": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 2
            },
            "minItems": 1
          },
          "compatibility": {
            "type": "object",
            "properties": {
              "androidVersions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "maxItems": 20
              },
              "rootMethods": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "maxItems": 5
              }
            },
            "required": [
              "androidVersions",
              "rootMethods"
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "required": [
          "name",
          "shortDescription",
          "description",
          "author",
          "category",
          "license",
          "isOpenSource",
          "features",
          "compatibility"
        ]
      },
      "ClientModuleSubmission": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9\\s\\-._()[\\]]+$"
          },
          "shortDescription": {
            "type": "string",
            "minLength": 10
          },
          "description": {
            "type": "string",
            "minLength": 30
          },
          "author": {
            "type": "string",
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9\\s\\-._@]+$"
          },
          "category": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "customLicense": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "isOpenSource": {
            "type": "boolean"
          },
          "sourceUrl": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "communityUrl": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "githubRepo": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 2
            },
            "minItems": 1
          },
          "compatibility": {
            "type": "object",
            "properties": {
              "androidVersions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "maxItems": 20
              },
              "rootMethods": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "maxItems": 5
              }
            },
            "required": [
              "androidVersions",
              "rootMethods"
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "string",
                "enum": [
                  ""
                ]
              }
            ]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "required": [
          "name",
          "shortDescription",
          "description",
          "author",
          "category",
          "license",
          "isOpenSource",
          "features",
          "compatibility"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request parameters"
                },
                "code": {
                  "type": "string",
                  "example": "400"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Authentication required"
                },
                "code": {
                  "type": "string",
                  "example": "401"
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Access denied"
                },
                "code": {
                  "type": "string",
                  "example": "403"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Resource not found"
                },
                "code": {
                  "type": "string",
                  "example": "404"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Resource already exists"
                },
                "code": {
                  "type": "string",
                  "example": "409"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An unexpected error occurred"
                },
                "code": {
                  "type": "string",
                  "example": "500"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/modules/{id}/stats": {
      "get": {
        "operationId": "get-modules-{id}-stats",
        "summary": "Get detailed module statistics",
        "description": "Get statistics for a specific module including downloads, ratings, and trends",
        "tags": [
          "Modules"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Module ID"
            },
            "required": true,
            "description": "Module ID",
            "example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/modules/update/{id}": {
      "put": {
        "operationId": "put-modules-update-{id}",
        "summary": "Update module",
        "description": "Update a module's information. Only the submitter can update their own unpublished modules.",
        "tags": [
          "Modules"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Module ID"
            },
            "required": true,
            "description": "Module ID",
            "example": "123"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "module": {
                    "type": "object",
                    "description": "Updated module fields"
                  },
                  "release": {
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string"
                      },
                      "downloadUrl": {
                        "type": "string",
                        "format": "uri"
                      },
                      "changelog": {
                        "type": "string",
                        "nullable": true
                      },
                      "size": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "version",
                      "downloadUrl"
                    ],
                    "nullable": true,
                    "description": "New release information"
                  }
                },
                "required": [
                  "module"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Module updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Update success status"
                    },
                    "module": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/ModuleResponseSchema"
                        }
                      ],
                      "description": "Updated module"
                    },
                    "message": {
                      "type": "string",
                      "description": "Result message"
                    }
                  },
                  "required": [
                    "success",
                    "module",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/ratings/{id}/replies": {
      "get": {
        "operationId": "get-ratings-{id}-replies",
        "summary": "Get rating replies",
        "description": "Get all replies for a specific rating/review",
        "tags": [
          "Ratings"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of replies for the rating",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "replies": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReplyResponseSchema"
                      },
                      "description": "List of replies for the rating"
                    }
                  },
                  "required": [
                    "replies"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "post-ratings-{id}-replies",
        "summary": "Post reply to rating",
        "description": "Post a reply to a rating/review. Requires authentication.",
        "tags": [
          "Ratings"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2000,
                    "description": "Reply content"
                  },
                  "turnstileToken": {
                    "type": "string",
                    "description": "Turnstile captcha token for verification"
                  }
                },
                "required": [
                  "content",
                  "turnstileToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reply created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/ReplyResponseSchema"
                        }
                      ],
                      "description": "Newly created reply"
                    }
                  },
                  "required": [
                    "reply"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin": {
      "get": {
        "operationId": "get-admin",
        "summary": "Get API key details",
        "description": "Retrieve detailed information about a specific API key including user information. Requires admin authentication.",
        "tags": [
          "s Admin - API Keys"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved API key details",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "operationId": "delete-admin",
        "summary": "Revoke an API key",
        "description": "Permanently revoke an API key, preventing any further use. This action cannot be undone. Requires admin authentication.",
        "tags": [
          "s Admin - API Keys"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "API key successfully revoked",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/recent-actions": {
      "get": {
        "operationId": "get-admin-recent-actions",
        "summary": "Get recent admin actions",
        "description": "Get audit log of recent administrative actions. Requires admin role.",
        "tags": [
          "s Admin, Audit"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved admin actions",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/modules": {
      "get": {
        "operationId": "get-admin-modules",
        "summary": "List all modules (admin)",
        "description": "Get a list of all modules with administrative details. Requires admin role.",
        "tags": [
          "s Admin, Modules"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of modules",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "post-admin-modules",
        "summary": "Create a new module (admin)",
        "description": "Create a new module directly without going through submission process. Requires admin role.",
        "tags": [
          "s Admin, Modules"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Module created successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/modules/{id}": {
      "delete": {
        "operationId": "delete-admin-modules-{id}",
        "summary": "Delete a module (admin)",
        "description": "Permanently delete a module and all associated data. Requires admin role.",
        "tags": [
          "s Admin, Modules"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Module deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "operationId": "patch-admin-modules-{id}",
        "summary": "Update module flags (admin)",
        "description": "Update module featured, recommended status and warnings. Requires admin role.",
        "tags": [
          "s Admin, Modules"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Module updated successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/modules/pending": {
      "get": {
        "operationId": "get-admin-modules-pending",
        "summary": "Get pending modules (admin)",
        "description": "Get list of modules awaiting approval. Requires admin role.",
        "tags": [
          "s Admin, Modules"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved pending modules",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/modules/{id}/edit": {
      "patch": {
        "operationId": "patch-admin-modules-{id}-edit",
        "summary": "Edit module details (admin)",
        "description": "Edit complete module information including metadata and sync settings. Requires admin role.",
        "tags": [
          "s Admin, Modules"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Module updated successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/modules/{id}/status": {
      "patch": {
        "operationId": "patch-admin-modules-{id}-status",
        "summary": "Update module status (admin)",
        "description": "Approve or reject a module submission. Requires admin role.",
        "tags": [
          "s Admin, Modules"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Module status updated successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/reviews": {
      "get": {
        "operationId": "get-admin-reviews",
        "summary": "Get all reviews (admin)",
        "description": "Get all module reviews with advanced filtering. Requires admin role.",
        "tags": [
          "s Admin, Reviews"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved reviews",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/stats": {
      "get": {
        "operationId": "get-admin-stats",
        "summary": "Get admin statistics",
        "description": "Get platform statistics including module, user, and download counts. Requires admin role.",
        "tags": [
          "s Admin, Statistics"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved statistics",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "operationId": "get-categories",
        "summary": "List module categories",
        "description": "Get a list of all available module categories with detailed statistics, module counts, and metadata.",
        "tags": [
          "s Categories"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved categories with detailed statistics and metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "count": {
                            "type": "number"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "name",
                          "displayName",
                          "description",
                          "count"
                        ]
                      },
                      "description": "Available module categories"
                    }
                  },
                  "required": [
                    "categories"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/modules/{id}/download": {
      "get": {
        "operationId": "get-modules-{id}-download",
        "summary": "Download module (redirect)",
        "description": "Initiate download of the latest module release. Automatically tracks download statistics and redirects to the actual file. Rate limited. Supports both public access and API key authentication.",
        "tags": [
          "s Downloads"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Module ID"
            },
            "required": true,
            "description": "Module ID",
            "example": "123"
          }
        ],
        "responses": {
          "302": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "post-modules-{id}-download",
        "summary": "Track download (internal)",
        "description": "Internal endpoint for analytics tracking of downloads. Used by frontend applications to track specific release downloads before initiating the actual download. Supports both public access and API key authentication.",
        "tags": [
          "s Downloads"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Module ID"
            },
            "required": true,
            "description": "Module ID",
            "example": "123"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "referrer": {
                    "type": "string",
                    "nullable": true,
                    "description": "Download referrer"
                  },
                  "userAgent": {
                    "type": "string",
                    "nullable": true,
                    "description": "User agent string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Download event tracked successfully in analytics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/modules/{id}/helpful-votes": {
      "get": {
        "operationId": "get-modules-{id}-helpful-votes",
        "summary": "Get user's helpful votes for module",
        "description": "Retrieve the authenticated user's helpful vote history for all ratings and replies on a specific module. Returns empty arrays for unauthenticated users.",
        "tags": [
          "s Helpful Votes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Module ID"
            },
            "required": true,
            "description": "Module ID",
            "example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user's helpful votes (empty if not authenticated)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratingVotes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Rating IDs the user has marked helpful"
                    },
                    "replyVotes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Reply IDs the user has marked helpful"
                    }
                  },
                  "required": [
                    "ratingVotes",
                    "replyVotes"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/ratings/{id}/helpful": {
      "post": {
        "operationId": "post-ratings-{id}-helpful",
        "summary": "Mark rating as helpful",
        "description": "Mark a rating/review as helpful to increase its visibility and credibility. Each user can only vote once per rating.",
        "tags": [
          "s Helpful Votes"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully marked rating as helpful and incremented counter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Vote operation success"
                    },
                    "helpful": {
                      "type": "number",
                      "description": "Updated helpful vote count"
                    },
                    "userVoted": {
                      "type": "boolean",
                      "description": "Whether current user has voted"
                    }
                  },
                  "required": [
                    "success",
                    "helpful",
                    "userVoted"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/replies/{id}/helpful": {
      "post": {
        "operationId": "post-replies-{id}-helpful",
        "summary": "Mark reply as helpful",
        "description": "Mark a reply to a rating as helpful to highlight valuable community responses. Each user can only vote once per reply.",
        "tags": [
          "s Helpful Votes"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully marked reply as helpful and incremented counter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Vote operation success"
                    },
                    "helpful": {
                      "type": "number",
                      "description": "Updated helpful vote count"
                    },
                    "userVoted": {
                      "type": "boolean",
                      "description": "Whether current user has voted"
                    }
                  },
                  "required": [
                    "success",
                    "helpful",
                    "userVoted"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/modules": {
      "get": {
        "operationId": "get-modules",
        "summary": "List modules",
        "description": "Get a list of published modules with optional filtering, search, and sorting. Supports both session-based and API key authentication.",
        "tags": [
          "s Modules"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "description": "Filter by category"
            },
            "required": false,
            "description": "Filter by category"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "description": "Search query for module names and descriptions"
            },
            "required": false,
            "description": "Search query for module names and descriptions"
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "enum": [
                "featured",
                "recommended",
                "recent"
              ],
              "description": "Pre-defined filter type"
            },
            "required": false,
            "description": "Pre-defined filter type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of modules",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "modules": {
                      "type": "array",
                      "items": {},
                      "description": "Array of module objects"
                    }
                  },
                  "required": [
                    "modules"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/modules/{id}": {
      "get": {
        "operationId": "get-modules-{id}",
        "summary": "Get module details",
        "description": "Retrieve information about a specific module including metadata, compatibility, features, and optionally releases. Supports both session-based and API key authentication.",
        "tags": [
          "s Modules"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "includeReleases",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "description": "Include release information"
            },
            "required": false,
            "description": "Include release information"
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Module ID"
            },
            "required": true,
            "description": "Module ID",
            "example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved module details with full metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "description": "Module object with full details"
                    }
                  },
                  "required": [
                    "module"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/modules/submit": {
      "post": {
        "operationId": "post-modules-submit",
        "summary": "Submit a new module",
        "description": "Submit a new module for community review and approval. Includes automatic image processing, file size validation, and duplicate prevention. All submissions undergo moderation before publication.",
        "tags": [
          "s Modules"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Module submitted successfully and queued for review",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique module ID"
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    },
                    "pending": {
                      "type": "boolean",
                      "description": "Indicates module is pending review"
                    }
                  },
                  "required": [
                    "id",
                    "message",
                    "pending"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/modules/{id}/ratings": {
      "get": {
        "operationId": "get-modules-{id}-ratings",
        "summary": "Get module ratings",
        "description": "Retrieve all ratings and reviews for a specific module, including the authenticated user's own rating if available. Returns rating data with user information.",
        "tags": [
          "s Ratings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Module ID"
            },
            "required": true,
            "description": "Module ID",
            "example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved ratings with user information and own rating",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RatingResponseSchema"
                      },
                      "description": "List of all ratings for the module"
                    },
                    "userRating": {
                      "type": "object",
                      "description": "Current user rating if exists"
                    }
                  },
                  "required": [
                    "ratings"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "post-modules-{id}-ratings",
        "summary": "Submit a rating",
        "description": "Submit a rating and optional review comment for a module. Includes spam protection via Turnstile captcha and validation. Users can only rate each module once.",
        "tags": [
          "s Ratings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Module ID"
            },
            "required": true,
            "description": "Module ID",
            "example": "123"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 5,
                    "description": "Rating value between 1 and 5"
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 1000,
                    "nullable": true,
                    "description": "Optional review comment (max 1000 characters)"
                  },
                  "turnstileToken": {
                    "type": "string",
                    "description": "Turnstile captcha token for verification"
                  }
                },
                "required": [
                  "rating",
                  "turnstileToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rating submitted successfully with full rating data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/RatingResponseSchema"
                        }
                      ],
                      "description": "Newly created rating"
                    }
                  },
                  "required": [
                    "rating"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/modules/{id}/releases": {
      "get": {
        "operationId": "get-modules-{id}-releases",
        "summary": "Get module releases",
        "description": "Retrieve version history and release information for a specific module. Can return all releases or just the latest release with metadata.",
        "tags": [
          "s Releases"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "latest",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "description": "Return only latest release"
            },
            "required": false,
            "description": "Return only latest release"
          },
          {
            "in": "query",
            "name": "includeAssets",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "description": "Include release assets"
            },
            "required": false,
            "description": "Include release assets"
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Module ID"
            },
            "required": true,
            "description": "Module ID",
            "example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved module releases with version history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "releases": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReleaseResponseSchema"
                      },
                      "description": "List of module releases"
                    }
                  },
                  "required": [
                    "releases"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/search": {
      "get": {
        "operationId": "get-search",
        "summary": "Advanced module search",
        "description": "Search modules with advanced filtering, sorting, and pagination. Supports full-text search across module names, descriptions, and authors with filtering options.",
        "tags": [
          "s Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string",
              "description": "Search query"
            },
            "required": false,
            "description": "Search query"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "description": "Filter by category"
            },
            "required": false,
            "description": "Filter by category"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "downloads",
                "rating",
                "updated",
                "name"
              ],
              "description": "Sort order"
            },
            "required": false,
            "description": "Sort order"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "Sort direction"
            },
            "required": false,
            "description": "Sort direction"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "Page number for pagination"
            },
            "required": false,
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "description": "Items per page"
            },
            "required": false,
            "description": "Items per page"
          },
          {
            "in": "query",
            "name": "minRating",
            "schema": {
              "type": "number",
              "description": "Minimum rating filter"
            },
            "required": false,
            "description": "Minimum rating filter"
          },
          {
            "in": "query",
            "name": "isOpenSource",
            "schema": {
              "type": "boolean",
              "description": "Filter by open source status"
            },
            "required": false,
            "description": "Filter by open source status"
          },
          {
            "in": "query",
            "name": "rootMethod",
            "schema": {
              "type": "string",
              "description": "Filter by root method"
            },
            "required": false,
            "description": "Filter by root method"
          },
          {
            "in": "query",
            "name": "androidVersion",
            "schema": {
              "type": "string",
              "description": "Filter by Android version compatibility"
            },
            "required": false,
            "description": "Filter by Android version compatibility"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved search results with metadata and pagination info",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "post-search",
        "summary": "Search suggestions",
        "description": "Get intelligent search suggestions and autocomplete for module names, authors, and categories. Helps users discover relevant content as they type.",
        "tags": [
          "s Search"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved search suggestions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "module",
                              "author",
                              "category"
                            ]
                          },
                          "value": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "count": {
                            "type": "number",
                            "nullable": true
                          }
                        },
                        "required": [
                          "type",
                          "value",
                          "label"
                        ]
                      },
                      "description": "Search suggestions"
                    }
                  },
                  "required": [
                    "suggestions"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stats": {
      "get": {
        "operationId": "get-stats",
        "summary": "Get platform statistics",
        "description": "Retrieve platform statistics including total modules, downloads, activity metrics, and category breakdowns.",
        "tags": [
          "s Statistics"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved platform statistics with current metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalModules": {
                      "type": "number",
                      "description": "Total number of modules"
                    },
                    "totalDownloads": {
                      "type": "number",
                      "description": "Total download count"
                    },
                    "totalUsers": {
                      "type": "number",
                      "description": "Total user count"
                    },
                    "pendingModules": {
                      "type": "number",
                      "description": "Modules pending review"
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "count": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "count"
                        ]
                      },
                      "description": "Module count by category"
                    }
                  },
                  "required": [
                    "totalModules",
                    "totalDownloads",
                    "totalUsers",
                    "pendingModules",
                    "categories"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "get-health",
        "summary": "Health check",
        "description": "Monitor application and scheduler health status. Requires admin role.",
        "tags": [
          "s System, Health"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Application is healthy",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/trending": {
      "get": {
        "operationId": "get-trending",
        "summary": "Get trending modules",
        "description": "Discover trending modules using sophisticated algorithms based on recent downloads, ratings, and updates. Multiple algorithms available.",
        "tags": [
          "s Trending"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved trending modules with detailed trend analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "modules": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModuleResponseSchema"
                      },
                      "description": "Trending modules"
                    }
                  },
                  "required": [
                    "modules"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/profile/{id}": {
      "get": {
        "operationId": "get-user-profile-{id}",
        "summary": "Get authenticated user profile",
        "description": "Retrieve profile information for the authenticated user only, including their published modules, statistics, recent activity, and achievements. Requires authentication and users can only access their own profile.",
        "tags": [
          "s User Profiles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "User ID"
            },
            "required": true,
            "description": "User ID",
            "example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user profile with statistics and activity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "image": {
                          "type": "string",
                          "nullable": true
                        },
                        "joinedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "modulesCount": {
                          "type": "number"
                        },
                        "totalDownloads": {
                          "type": "number"
                        },
                        "averageRating": {
                          "type": "number",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "joinedAt",
                        "modulesCount",
                        "totalDownloads"
                      ],
                      "description": "Public user profile"
                    },
                    "modules": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModuleResponseSchema"
                      },
                      "description": "User published modules"
                    },
                    "recentActivity": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "module_published",
                              "module_updated",
                              "rating_posted"
                            ]
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "moduleId": {
                            "type": "string",
                            "nullable": true
                          },
                          "moduleName": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "type",
                          "timestamp"
                        ]
                      },
                      "description": "Recent user activity"
                    }
                  },
                  "required": [
                    "user",
                    "modules",
                    "recentActivity"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/modules/my-submissions": {
      "get": {
        "operationId": "get-modules-my-submissions",
        "summary": "Get user's module submissions",
        "description": "Retrieve all modules submitted by the authenticated user, including submission status, warnings, and review progress.",
        "tags": [
          "s User Submissions"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user's module submissions with status information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "modules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "approved",
                              "rejected"
                            ],
                            "description": "Module status"
                          },
                          "submittedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Submission date"
                          },
                          "reviewedAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Review date"
                          },
                          "reviewNote": {
                            "type": "string",
                            "nullable": true,
                            "description": "Review feedback"
                          }
                        },
                        "required": [
                          "status",
                          "submittedAt"
                        ]
                      },
                      "description": "User submitted modules"
                    }
                  },
                  "required": [
                    "modules"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/settings/avatar": {
      "post": {
        "operationId": "post-settings-avatar",
        "summary": "Upload user avatar",
        "description": "Upload a new avatar image for the authenticated user",
        "tags": [
          "Settings"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Upload success status"
                    },
                    "url": {
                      "type": "string",
                      "description": "Avatar URL"
                    },
                    "message": {
                      "type": "string",
                      "description": "Result message"
                    }
                  },
                  "required": [
                    "success",
                    "url",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "operationId": "delete-settings-avatar",
        "summary": "Delete user avatar",
        "description": "Remove the authenticated user's avatar image",
        "tags": [
          "Settings"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Delete success status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Result message"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/settings/github-pat": {
      "get": {
        "operationId": "get-settings-github-pat",
        "summary": "Check GitHub PAT status",
        "description": "Check if the authenticated user has a GitHub Personal Access Token configured",
        "tags": [
          "Settings"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "PAT status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasToken": {
                      "type": "boolean",
                      "description": "Whether user has configured a PAT"
                    },
                    "username": {
                      "type": "string",
                      "nullable": true,
                      "description": "Associated GitHub username"
                    }
                  },
                  "required": [
                    "hasToken"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "post-settings-github-pat",
        "summary": "Save GitHub PAT",
        "description": "Save a GitHub Personal Access Token for the authenticated user",
        "tags": [
          "Settings"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "minLength": 1,
                    "description": "GitHub Personal Access Token"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PAT saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Result message"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "operationId": "delete-settings-github-pat",
        "summary": "Delete GitHub PAT",
        "description": "Remove the GitHub Personal Access Token for the authenticated user",
        "tags": [
          "Settings"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "PAT removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Result message"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/settings/profile": {
      "patch": {
        "operationId": "patch-settings-profile",
        "summary": "Update user profile",
        "description": "Update the authenticated user's profile information",
        "tags": [
          "Settings"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "image": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ],
                      "description": "Updated user information"
                    }
                  },
                  "required": [
                    "success",
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/settings/github-pat/validate": {
      "post": {
        "operationId": "post-settings-github-pat-validate",
        "summary": "Validate GitHub PAT",
        "description": "Validate a GitHub Personal Access Token and retrieve associated user information",
        "tags": [
          "Settings"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "minLength": 1,
                    "description": "GitHub Personal Access Token to validate"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PAT is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "description": "Token validity status"
                    },
                    "username": {
                      "type": "string",
                      "nullable": true,
                      "description": "GitHub username"
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "description": "Token scopes"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Validation error message"
                    }
                  },
                  "required": [
                    "valid"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user": {
      "delete": {
        "operationId": "delete-user",
        "summary": "Revoke API key",
        "description": "Revoke/delete a specific API key for the authenticated user",
        "tags": [
          "User"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "API key revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Result message"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "get": {
        "operationId": "get-user",
        "summary": "List user API keys",
        "description": "Get all active API keys for the authenticated user",
        "tags": [
          "User"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of user's API keys (without actual key values)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expiresAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastUsed": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "scopes",
                          "createdAt"
                        ]
                      },
                      "description": "List of user API keys (without key values)"
                    }
                  },
                  "required": [
                    "apiKeys"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "post-user",
        "summary": "Create API key",
        "description": "Create a new API key for the authenticated user (max 10 keys per user)",
        "tags": [
          "User"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "expiresIn": {
                    "type": "string",
                    "enum": [
                      "30days",
                      "90days",
                      "1year",
                      "never"
                    ],
                    "nullable": true
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "read",
                        "write",
                        "admin"
                      ]
                    },
                    "nullable": true
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "API key created successfully (includes the actual key - only shown once)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "API key ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "API key name"
                    },
                    "key": {
                      "type": "string",
                      "description": "API key value (only shown once)"
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Granted scopes"
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Expiration date"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation date"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "key",
                    "scopes",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/role": {
      "get": {
        "operationId": "get-user-role",
        "summary": "Get user role",
        "description": "Get the role of the authenticated user (user or admin)",
        "tags": [
          "User"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User role retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isAdmin": {
                      "type": "boolean",
                      "description": "Admin role status"
                    },
                    "userId": {
                      "type": "string",
                      "description": "User ID"
                    },
                    "email": {
                      "type": "string",
                      "nullable": true,
                      "description": "User email"
                    }
                  },
                  "required": [
                    "isAdmin",
                    "userId"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  }
}